var number [2]string
	for i := 0; i < 2; i++ {
		if i == 0 {
			fmt.Print("First name: ")
		} else {
			fmt.Print("Last name: ")
		}
		fmt.Scan(&number[i])
	}
	fmt.Printf("%v %v\n", number[0], number[1])

************************************************************************************************************************************************************

package main

import (
	"fmt"
	"strconv"
	"strings"
)

type circle struct {
	pi     float32
	radius float32
}

func main() {
	var _circle circle
	_circle.pi = 3.14
	area := circle_calculate(_circle)

	for {
		fmt.Print("Enter radius : ")
		var input string
		fmt.Scan(&input)

		if strings.ToLower(input) == "q" || strings.ToLower(input) == "exit" {
			fmt.Printf("Circle area = %v\n", area)
			break
		}

		radius_, _ := strconv.ParseFloat(input, 32)

		_circle.radius = float32(radius_)
		area = circle_calculate(_circle)
		fmt.Printf("Circle area = %v\n", area)
	}
}

func circle_calculate(calculate circle) float32 {
	area := calculate.pi * calculate.radius * calculate.radius
	return area
}

************************************************************************************************************************************************************

type triangle struct {
	width float64
	high  float64
}

func main() {
	var P_triangle triangle
	var calculate []float64
	for i := 0; i < 3; i++ {
		fmt.Print("Enter number : ")
		fmt.Scan(&P_triangle.high, &P_triangle.width)
		result := calculate_triangle(P_triangle)
		calculate = append(calculate, result)

	}
	for _, area := range calculate {
		fmt.Printf("trianfle = %v\n", area)
	}

}

func calculate_triangle(triangle_fn triangle) float64 {
	return 0.5 * triangle_fn.high * triangle_fn.width
}

************************************************************************************************************************************************************

package main

import "fmt"

type manaa struct {
	nam_tom int
	cola    int
}

func main() {
	var bottla_tom, bottla_cola manaa

	var input int
	fmt.Print("Enter number : ")
	fmt.Scan(&input)
	if input == 1 {
		var tom_input int
		fmt.Print("Enter number of bottla : ")
		fmt.Scan(&tom_input)

		fmt.Print("Nam tom is ")
		result := fn_namtom(tom_input, bottla_tom)
		fmt.Println(result)

	} else if input == 2 {
		var cola_input int
		fmt.Print("Enter number of bottla : ")
		fmt.Scan(&cola_input)

		fmt.Print("Cola is ")
		result := fn_cola(cola_input, bottla_cola)
		fmt.Println(result)
	}

}

func fn_namtom(input_ int, bottla_tom manaa) int {
	bottla_tom.nam_tom = 100 * input_
	return bottla_tom.nam_tom
}

func fn_cola(input_ int, bottla_cola manaa) int {
	bottla_cola.cola = 50 * input_
	return bottla_cola.cola
}
